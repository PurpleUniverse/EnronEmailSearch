@model EnronEmailSearch.Web.Controllers.SearchViewModel
@{
    ViewData["Title"] = $"Search Results for '{Model.Query}'";
}

<div class="mb-4">
    <form asp-action="Search" method="get" class="mb-4">
        <div class="input-group">
            <input type="text" name="q" class="form-control" placeholder="Search terms..." 
                   value="@Model.Query" required>
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-search"></i> Search
            </button>
        </div>
    </form>
    
    <p class="text-muted">
        Found @Model.TotalResults results in @(Model.SearchTimeMs.ToString("F0"))ms
    </p>
</div>

@if (!Model.Results.Any())
{
    <div class="alert alert-info">
        No results found for your search query.
    </div>
}
else
{
    <div class="list-group mb-4">
        @foreach (var result in Model.Results)
        {
            <div class="list-group-item">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">@result.FileName</h5>
                    <small>Relevance: @result.Relevance</small>
                </div>
                <div class="mt-2">
                    <a asp-action="Preview" asp-route-id="@result.FileId" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-eye"></i> Preview
                    </a>
                    <a asp-action="Download" asp-route-id="@result.FileId" class="btn btn-sm btn-outline-secondary">
                        <i class="bi bi-download"></i> Download
                    </a>
                </div>
            </div>
        }
    </div>
    
    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Search results pages">
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Search" asp-route-q="@Model.Query" asp-route-page="1">First</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-action="Search" asp-route-q="@Model.Query" asp-route-page="@(Model.CurrentPage - 1)">Previous</a>
                    </li>
                }
                
                @{
                    int startPage = Math.Max(1, Model.CurrentPage - 2);
                    int endPage = Math.Min(Model.TotalPages, startPage + 4);
                    startPage = Math.Max(1, endPage - 4);
                }
                
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Search" asp-route-q="@Model.Query" asp-route-page="@i">@i</a>
                    </li>
                }
                
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Search" asp-route-q="@Model.Query" asp-route-page="@(Model.CurrentPage + 1)">Next</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-action="Search" asp-route-q="@Model.Query" asp-route-page="@Model.TotalPages">Last</a>
                    </li>
                }
            </ul>
        </nav>
    }
}